!function(WX){"use strict";function SimpleOsc(preset){WX.Plugin.defineType(this,"Generator"),this._osc=WX.OSC(),this._env=WX.Gain(),this._osc.to(this._env).to(this._output),this._osc.start(0),WX.defineParams(this,{freq:{type:"Generic",unit:"Hertz","default":WX.mtof(60),min:20,max:5e3},env:{type:"Generic",unit:"LinearGain","default":0,min:0,max:1}}),WX.Plugin.initPreset(this,preset)}SimpleOsc.prototype={info:{name:"SimpleOsc",api_version:"1.0.0-alpha",plugin_version:"0.0.1",author:"hoch",type:"instrument",description:"1 oscillator synth"},defaultPreset:{freq:WX.mtof(60),env:0},$freq:function(value,time,rampType){this._osc.frequency.set(value,time,rampType)},$env:function(value,time,rampType){this._env.gain.set(value,time,rampType)},onData:function(action,data){switch(action){case"noteon":this.noteOn(data.pitch,data.velocity);break;case"glide":this.glide(data.pitch);break;case"noteoff":this.noteOff()}},noteOn:function(pitch,velocity){this.$env(velocity/127,[WX.now,.02],3),this.$freq(WX.mtof(pitch),WX.now+.01,1)},glide:function(pitch){this.$freq(WX.mtof(pitch),WX.now+.01,1)},noteOff:function(){this.$env(0,[WX.now,.1],3)}},WX.Plugin.extendPrototype(SimpleOsc,"Generator"),WX.Plugin.register(SimpleOsc)}(WX);
//# sourceMappingURL=../waax.map