!function(WX){"use strict";function CMP1(preset){WX.PlugIn.defineType(this,"Processor"),this._comp=WX.Comp(),this._makeup=WX.Gain(),this._input.to(this._comp).to(this._makeup).to(this._output),WX.defineParams(this,{threshold:{type:"Generic",name:"Threshold","default":-8,min:-60,max:0,unit:"Decibels"},knee:{type:"Generic",name:"Knee","default":20,min:0,max:40,unit:"Decibels"},ratio:{type:"Generic",name:"Ratio","default":4,min:1,max:20},attack:{type:"Generic",name:"Attack","default":.025,min:0,max:1,unit:"Seconds"},release:{type:"Generic",name:"Release","default":.25,min:0,max:1,unit:"Seconds"},makeup:{type:"Generic",name:"Makeup","default":0,min:0,max:24,unit:"Decibels"}}),WX.PlugIn.initPreset(this,preset)}CMP1.prototype={info:{name:"CMP1",version:"0.0.1",api_version:"1.0.0-alpha",author:"Hongchan Choi",type:"Processor",description:"Basic compressor"},defaultPreset:{threshold:-8,knee:20,ratio:4,attack:.025,release:.25,makeup:0},$threshold:function(value,time,rampType){this._comp.threshold.set(value,time,rampType)},$knee:function(value,time,rampType){this._comp.knee.set(value,time,rampType)},$ratio:function(value,time,rampType){this._comp.ratio.set(value,time,rampType)},$attack:function(value,time,rampType){this._comp.attack.set(value,time,rampType)},$release:function(value,time,rampType){this._comp.release.set(value,time,rampType)},$makeup:function(value,time,rampType){this._makeup.gain.set(WX.dbtolin(value),time,rampType)}},WX.PlugIn.extendPrototype(CMP1,"Processor"),WX.PlugIn.register(CMP1)}(WX);